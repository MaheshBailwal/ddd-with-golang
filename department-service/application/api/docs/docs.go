// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/department": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "department"
                ],
                "summary": "get all departments",
                "parameters": [
                    {
                        "type": "string",
                        "description": "filters for data",
                        "name": "filter",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse-array_dtos_DepartmentDetail"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse-ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse-ApiError"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "department"
                ],
                "summary": "insert/update department",
                "parameters": [
                    {
                        "description": "Query Params",
                        "name": "params",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/DepartmentSet"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse-int"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse-ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse-ApiError"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "department"
                ],
                "summary": "delete department by number",
                "parameters": [
                    {
                        "description": "department ids",
                        "name": "ids",
                        "in": "body",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DepartmentId"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse-ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse-ApiError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ApiError": {
            "type": "object",
            "properties": {
                "errorCode": {
                    "format": "int32",
                    "allOf": [
                        {
                            "$ref": "#/definitions/core.ErrCode"
                        }
                    ]
                },
                "message": {
                    "type": "string"
                },
                "meta": {
                    "x-nullable": true,
                    "x-omitempty": true
                }
            }
        },
        "ApiResponse-ApiError": {
            "type": "object",
            "properties": {
                "payload": {
                    "$ref": "#/definitions/ApiError"
                }
            }
        },
        "ApiResponse-array_dtos_DepartmentDetail": {
            "type": "object",
            "properties": {
                "payload": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.DepartmentDetail"
                    }
                }
            }
        },
        "ApiResponse-int": {
            "type": "object",
            "properties": {
                "payload": {
                    "type": "integer"
                }
            }
        },
        "DepartmentId": {
            "type": "object",
            "properties": {
                "number": {
                    "type": "integer"
                }
            }
        },
        "DepartmentSet": {
            "type": "object",
            "required": [
                "name",
                "number"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "number": {
                    "type": "integer"
                },
                "referenceCode": {
                    "type": "string"
                }
            }
        },
        "core.ErrCode": {
            "type": "integer",
            "enum": [
                1001,
                1002
            ],
            "x-enum-varnames": [
                "CouponNotFound",
                "CouponInUse"
            ]
        },
        "dtos.DepartmentDetail": {
            "type": "object",
            "properties": {
                "modifyDate": {
                    "type": "string"
                },
                "modifyUser": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "number": {
                    "type": "integer"
                },
                "referenceCode": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
